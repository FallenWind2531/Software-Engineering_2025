package com.Main.service;

import org.hsqldb.jdbc.JDBCDataSource;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.jdbc.core.JdbcTemplate;

import javax.sql.DataSource;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.*;

public class StudentAnswerResultServiceTest {

    private StudentAnswerResultService service;
    private JdbcTemplate jdbcTemplate;

    @BeforeEach
    void setUp() {
        JDBCDataSource ds = new JDBCDataSource();
        ds.setUrl("jdbc:hsqldb:mem:testdb");
        ds.setUser("sa");
        ds.setPassword("");
        DataSource dataSource = ds;

        jdbcTemplate = new JdbcTemplate(dataSource);

        jdbcTemplate.execute("DROP TABLE IF EXISTS question_bank");
        jdbcTemplate.execute("DROP TABLE IF EXISTS student_answer_result");

        jdbcTemplate.execute(
            "CREATE TABLE question_bank (" +
            "  question_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
            "  answer VARCHAR(255), " +
            "  score INTEGER" +
            ")"
        );

        jdbcTemplate.execute(
            "CREATE TABLE student_answer_result (" +
            "  result_id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY, " +
            "  test_id INTEGER, " +
            "  student_id INTEGER, " +
            "  question_id INTEGER, " +
            "  student_answer VARCHAR(255), " +
            "  is_correct BOOLEAN, " +
            "  score_obtained INTEGER, " +
            "  answer_time TIMESTAMP" +
            ")"
        );

        service = new StudentAnswerResultService();
        service.setJdbcTemplate(jdbcTemplate);
    }

    @Test
    void submitAnswer_insertsAndUpdates() {
        jdbcTemplate.update("INSERT INTO question_bank (question_id, answer, score) VALUES (?,?,?)", 1, "A", 5);

        int resultId = service.submitAnswer(2, 3, 1, "A");
        assertEquals(1, resultId);

        Map<String, Object> row = jdbcTemplate.queryForMap(
            "SELECT * FROM student_answer_result WHERE result_id = ?", resultId);
        assertEquals(2, ((Number) row.get("test_id")).intValue());
        assertEquals(3, ((Number) row.get("student_id")).intValue());
        assertEquals(1, ((Number) row.get("question_id")).intValue());
        assertEquals("A", row.get("student_answer"));
        assertEquals(Boolean.TRUE, row.get("is_correct"));
        assertEquals(5, ((Number) row.get("score_obtained")).intValue());
        assertNotNull(row.get("answer_time"));

        int updated = service.submitAnswer(2, 3, 1, "B");
        assertEquals(1, updated);

        Map<String, Object> updatedRow = jdbcTemplate.queryForMap(
            "SELECT * FROM student_answer_result WHERE result_id = ?", resultId);
        assertEquals("B", updatedRow.get("student_answer"));
        assertEquals(Boolean.FALSE, updatedRow.get("is_correct"));
        assertEquals(0, ((Number) updatedRow.get("score_obtained")).intValue());
    }
}
